[gd_scene load_steps=27 format=4 uid="uid://b468oxcelg53b"]

[ext_resource type="Script" uid="uid://coqyk8dykhr6g" path="res://scripts/game_tablemenu.gd" id="1_mi270"]
[ext_resource type="Texture2D" uid="uid://bj064owr3b45d" path="res://assets/cirno-game.png" id="2_a75m5"]
[ext_resource type="Texture2D" uid="uid://cxe4rs3rm3c5w" path="res://assets/toppings.png" id="2_twdh5"]
[ext_resource type="Script" uid="uid://0nom2r2weapd" path="res://scripts/cream_raw.gd" id="3_a75m5"]
[ext_resource type="Texture2D" uid="uid://32n2a0ujd5hy" path="res://assets/tablebg.png" id="3_xfssl"]
[ext_resource type="Script" uid="uid://bm0saqtui60nh" path="res://scripts/orderpanel.gd" id="5_hf3yf"]
[ext_resource type="Texture2D" uid="uid://dgnhenm28ax5t" path="res://assets/cone.png" id="5_khkxo"]
[ext_resource type="Texture2D" uid="uid://d3x16qicq0heq" path="res://assets/poof.png" id="7_imbru"]
[ext_resource type="Texture2D" uid="uid://cjwtggbxp24vp" path="res://assets/ingredientframe.png" id="9_8v45c"]
[ext_resource type="Texture2D" uid="uid://cs5yfp67ee46v" path="res://assets/ordertop.png" id="9_gj0v0"]
[ext_resource type="PackedScene" uid="uid://c6gg6bhmerwpx" path="res://scenes/popups.tscn" id="9_imbru"]
[ext_resource type="Texture2D" uid="uid://vl40ypxklq8y" path="res://assets/ordermid.png" id="10_ektat"]
[ext_resource type="Texture2D" uid="uid://nn0lhhorwjbk" path="res://assets/tileset2.png" id="10_u14es"]
[ext_resource type="Texture2D" uid="uid://dbgfby2wqhh1s" path="res://assets/orderbottom.png" id="11_uu4ud"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_kreb0"]
texture = ExtResource("2_twdh5")
texture_region_size = Vector2i(11, 11)
0:0/0 = 0
1:0/0 = 0
0:1/0 = 0
1:1/0 = 0
0:2/0 = 0
1:2/0 = 0
0:3/0 = 0
2:0/0 = 0
2:1/0 = 0
3:0/0 = 0
3:1/0 = 0
2:2/0 = 0
3:2/0 = 0
1:3/0 = 0
2:3/0 = 0
3:3/0 = 0
0:4/0 = 0
0:5/0 = 0
1:5/0 = 0
1:4/0 = 0
3:4/0 = 0
2:5/0 = 0
3:5/0 = 0
2:4/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_hf3yf"]
texture = ExtResource("2_a75m5")
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
4:0/0 = 0
11:0/0 = 0
12:0/0 = 0
23:0/0 = 0
24:0/0 = 0
25:0/0 = 0
0:1/0 = 0
1:1/0 = 0
2:1/0 = 0
3:1/0 = 0
4:1/0 = 0
11:1/0 = 0
12:1/0 = 0
23:1/0 = 0
24:1/0 = 0
25:1/0 = 0
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
3:2/0 = 0
4:2/0 = 0
5:2/0 = 0
6:2/0 = 0
7:2/0 = 0
11:2/0 = 0
12:2/0 = 0
23:2/0 = 0
24:2/0 = 0
25:2/0 = 0
0:3/0 = 0
1:3/0 = 0
2:3/0 = 0
3:3/0 = 0
4:3/0 = 0
5:3/0 = 0
6:3/0 = 0
7:3/0 = 0
11:3/0 = 0
12:3/0 = 0
0:4/0 = 0
1:4/0 = 0
2:4/0 = 0
3:4/0 = 0
4:4/0 = 0
5:4/0 = 0
6:4/0 = 0
7:4/0 = 0
15:4/0 = 0
17:4/0 = 0
0:5/0 = 0
1:5/0 = 0
2:5/0 = 0
3:5/0 = 0
4:5/0 = 0
5:5/0 = 0
6:5/0 = 0
7:5/0 = 0
20:5/0 = 0
21:5/0 = 0
22:5/0 = 0
15:6/0 = 0
17:6/0 = 0
20:6/0 = 0
21:6/0 = 0
22:6/0 = 0
24:6/0 = 0
25:6/0 = 0
26:6/0 = 0
0:7/0 = 0
1:7/0 = 0
6:7/0 = 0
10:7/0 = 0
11:7/0 = 0
12:7/0 = 0
20:7/0 = 0
21:7/0 = 0
22:7/0 = 0
24:7/0 = 0
26:7/0 = 0
0:8/0 = 0
1:8/0 = 0
15:8/0 = 0
16:8/0 = 0
17:8/0 = 0
24:8/0 = 0
25:8/0 = 0
26:8/0 = 0
27:8/0 = 0
4:9/0 = 0
6:9/0 = 0
8:9/0 = 0
10:9/0 = 0
15:9/0 = 0
16:9/0 = 0
17:9/0 = 0
19:9/0 = 0
26:9/0 = 0
1:10/0 = 0
2:10/0 = 0
3:10/0 = 0
8:10/0 = 0
10:10/0 = 0
15:10/0 = 0
16:10/0 = 0
17:10/0 = 0
1:11/0 = 0
2:11/0 = 0
3:11/0 = 0
5:11/0 = 0
1:12/0 = 0
2:12/0 = 0
3:12/0 = 0
13:12/0 = 0
15:12/0 = 0
17:12/0 = 0
19:12/0 = 0
21:12/0 = 0
23:12/0 = 0
25:12/0 = 0
0:13/0 = 0
1:13/0 = 0
2:13/0 = 0
3:13/0 = 0
4:13/0 = 0
5:13/0 = 0
6:13/0 = 0
7:13/0 = 0
8:13/0 = 0
0:14/0 = 0
1:14/0 = 0
2:14/0 = 0
3:14/0 = 0
4:14/0 = 0
5:14/0 = 0
6:14/0 = 0
7:14/0 = 0
8:14/0 = 0
17:14/0 = 0
19:14/0 = 0
21:14/0 = 0
26:14/0 = 0
27:14/0 = 0
7:15/0 = 0
8:15/0 = 0
15:15/0 = 0
20:15/0 = 0
21:15/0 = 0
26:15/0 = 0
27:15/0 = 0
0:16/0 = 0
1:16/0 = 0
2:16/0 = 0
3:16/0 = 0
4:16/0 = 0
5:16/0 = 0
6:16/0 = 0
7:16/0 = 0
8:16/0 = 0
20:16/0 = 0
21:16/0 = 0
26:16/0 = 0
27:16/0 = 0
29:16/0 = 0
0:17/0 = 0
1:17/0 = 0
2:17/0 = 0
3:17/0 = 0
4:17/0 = 0
5:17/0 = 0
6:17/0 = 0
7:17/0 = 0
8:17/0 = 0
13:17/0 = 0
15:17/0 = 0
17:17/0 = 0
19:17/0 = 0
25:17/0 = 0
26:17/0 = 0
27:17/0 = 0
0:18/0 = 0
1:18/0 = 0
2:18/0 = 0
3:18/0 = 0
4:18/0 = 0
5:18/0 = 0
6:18/0 = 0
7:18/0 = 0
8:18/0 = 0
13:18/0 = 0
15:18/0 = 0
17:18/0 = 0
19:18/0 = 0
25:18/0 = 0
26:18/0 = 0
27:18/0 = 0
29:18/0 = 0
0:19/0 = 0
1:19/0 = 0
2:19/0 = 0
3:19/0 = 0
4:19/0 = 0
5:19/0 = 0
6:19/0 = 0
7:19/0 = 0
8:19/0 = 0
15:19/0 = 0
17:19/0 = 0
19:19/0 = 0
21:19/0 = 0
23:19/0 = 0
25:19/0 = 0
26:19/0 = 0
27:19/0 = 0
0:20/0 = 0
1:20/0 = 0
2:20/0 = 0
3:20/0 = 0
4:20/0 = 0
15:20/0 = 0
17:20/0 = 0
19:20/0 = 0
21:20/0 = 0
23:20/0 = 0
25:20/0 = 0
26:20/0 = 0
27:20/0 = 0
0:21/0 = 0
1:21/0 = 0
2:21/0 = 0
3:21/0 = 0
6:21/0 = 0
7:21/0 = 0
8:21/0 = 0
13:21/0 = 0
15:21/0 = 0
17:21/0 = 0
19:21/0 = 0
21:21/0 = 0
23:21/0 = 0
0:22/0 = 0
1:22/0 = 0
2:22/0 = 0
6:22/0 = 0
7:22/0 = 0
8:22/0 = 0
25:22/0 = 0
28:22/0 = 0
26:23/0 = 0
27:23/0 = 0
26:24/0 = 0
27:24/0 = 0
10:25/0 = 0
17:25/0 = 0
18:25/0 = 0
19:25/0 = 0
20:25/0 = 0
21:25/0 = 0
26:25/0 = 0
27:25/0 = 0
28:26/0 = 0
29:26/0 = 0
27:27/0 = 0
28:27/0 = 0
29:27/0 = 0
30:27/0 = 0

[sub_resource type="TileSet" id="TileSet_twdh5"]
sources/1 = SubResource("TileSetAtlasSource_hf3yf")
sources/0 = SubResource("TileSetAtlasSource_kreb0")

[sub_resource type="Shader" id="Shader_mi270"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.5.stable's ParticleProcessMaterial.

shader_type particles;
render_mode disable_velocity;

uniform vec3 direction;
uniform float spread;
uniform float flatness;
uniform float inherit_emitter_velocity_ratio = 0.0;
uniform float initial_linear_velocity_min;
uniform float initial_linear_velocity_max;
uniform float directional_velocity_min;
uniform float directional_velocity_max;
uniform float angular_velocity_min;
uniform float angular_velocity_max;
uniform float orbit_velocity_min;
uniform float orbit_velocity_max;
uniform float radial_velocity_min;
uniform float radial_velocity_max;
uniform float linear_accel_min;
uniform float linear_accel_max;
uniform float radial_accel_min;
uniform float radial_accel_max;
uniform float tangent_accel_min;
uniform float tangent_accel_max;
uniform float damping_min;
uniform float damping_max;
uniform float initial_angle_min;
uniform float initial_angle_max;
uniform float scale_min;
uniform float scale_max;
uniform float hue_variation_min;
uniform float hue_variation_max;
uniform float anim_speed_min;
uniform float anim_speed_max;
uniform float anim_offset_min;
uniform float anim_offset_max;
uniform float lifetime_randomness;
uniform vec3 emission_shape_offset = vec3(0.0);
uniform vec3 emission_shape_scale = vec3(1.0);
uniform vec3 velocity_pivot = vec3(0.0);
uniform vec4 color_value : source_color;
uniform vec3 gravity;
uniform float collision_friction;
uniform float collision_bounce;

vec4 rotate_hue(vec4 current_color, float hue_rot_angle) {
	float hue_rot_c = cos(hue_rot_angle);
	float hue_rot_s = sin(hue_rot_angle);
	mat4 hue_rot_mat =
			mat4(vec4(0.299, 0.587, 0.114, 0.0),
					vec4(0.299, 0.587, 0.114, 0.0),
					vec4(0.299, 0.587, 0.114, 0.0),
					vec4(0.000, 0.000, 0.000, 1.0)) +
			mat4(vec4(0.701, -0.587, -0.114, 0.0),
					vec4(-0.299, 0.413, -0.114, 0.0),
					vec4(-0.300, -0.588, 0.886, 0.0),
					vec4(0.000, 0.000, 0.000, 0.0)) *
					hue_rot_c +
			mat4(vec4(0.168, 0.330, -0.497, 0.0),
					vec4(-0.328, 0.035, 0.292, 0.0),
					vec4(1.250, -1.050, -0.203, 0.0),
					vec4(0.000, 0.000, 0.000, 0.0)) *
					hue_rot_s;
	return hue_rot_mat * current_color;
}

float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0) {
		s = 305420679;
	}
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0) {
		s += 2147483647;
	}
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

struct DisplayParameters {
	vec3 scale;
	float hue_rotation;
	float animation_speed;
	float animation_offset;
	float lifetime;
	vec4 color;
	float emission_texture_position;
};

struct DynamicsParameters {
	float angle;
	float angular_velocity;
	float initial_velocity_multiplier;
	float directional_velocity;
	float radial_velocity;
	float orbit_velocity;
};

struct PhysicalParameters {
	float linear_accel;
	float radial_accel;
	float tangent_accel;
	float damping;
};

void calculate_initial_physical_params(inout PhysicalParameters params, inout uint alt_seed) {
	params.linear_accel = mix(linear_accel_min, linear_accel_max, rand_from_seed(alt_seed));
	params.radial_accel = mix(radial_accel_min, radial_accel_max, rand_from_seed(alt_seed));
	params.tangent_accel = mix(tangent_accel_min, tangent_accel_max, rand_from_seed(alt_seed));
	params.damping = mix(damping_min, damping_max, rand_from_seed(alt_seed));
}

void calculate_initial_dynamics_params(inout DynamicsParameters params, inout uint alt_seed) {
	// -------------------- DO NOT REORDER OPERATIONS, IT BREAKS VISUAL COMPATIBILITY
	// -------------------- ADD NEW OPERATIONS AT THE BOTTOM
	params.angle = mix(initial_angle_min, initial_angle_max, rand_from_seed(alt_seed));
	params.angular_velocity = mix(angular_velocity_min, angular_velocity_max, rand_from_seed(alt_seed));
	params.initial_velocity_multiplier = mix(initial_linear_velocity_min, initial_linear_velocity_max, rand_from_seed(alt_seed));
	params.directional_velocity = mix(directional_velocity_min, directional_velocity_max, rand_from_seed(alt_seed));
	params.radial_velocity = mix(radial_velocity_min, radial_velocity_max, rand_from_seed(alt_seed));
	params.orbit_velocity = mix(orbit_velocity_min, orbit_velocity_max, rand_from_seed(alt_seed));
}

void calculate_initial_display_params(inout DisplayParameters params, inout uint alt_seed) {
	// -------------------- DO NOT REORDER OPERATIONS, IT BREAKS VISUAL COMPATIBILITY
	// -------------------- ADD NEW OPERATIONS AT THE BOTTOM
	float pi = 3.14159;
	params.scale = vec3(mix(scale_min, scale_max, rand_from_seed(alt_seed)));
	params.scale = sign(params.scale) * max(abs(params.scale), 0.001);
	params.hue_rotation = pi * 2.0 * mix(hue_variation_min, hue_variation_max, rand_from_seed(alt_seed));
	params.animation_speed = mix(anim_speed_min, anim_speed_max, rand_from_seed(alt_seed));
	params.animation_offset = mix(anim_offset_min, anim_offset_max, rand_from_seed(alt_seed));
	params.lifetime = (1.0 - lifetime_randomness * rand_from_seed(alt_seed));
	params.color = color_value;
}

void process_display_param(inout DisplayParameters parameters, float lifetime) {
	// Compile-time add textures.
	parameters.color = rotate_hue(parameters.color, parameters.hue_rotation);
}

vec3 calculate_initial_position(inout DisplayParameters params, inout uint alt_seed) {
	float pi = 3.14159;
	vec3 pos = vec3(0.0);
	{ // Emission shape.
	 	pos = vec3(0.0);
	}
	return pos * emission_shape_scale + emission_shape_offset;
}

vec3 process_orbit_displacement(DynamicsParameters param, float lifetime, inout uint alt_seed, mat4 transform, mat4 emission_transform, float delta, float total_lifetime) {
	if (abs(param.orbit_velocity) < 0.01 || delta < 0.001) {
		return vec3(0.0);
	}
	vec3 displacement = vec3(0.0);
	float pi = 3.14159;
	float orbit_amount = param.orbit_velocity;
	if (orbit_amount != 0.0) {
		vec3 pos = transform[3].xyz;
		vec3 org = emission_transform[3].xyz;
		vec3 diff = pos - org;
		float ang = orbit_amount * pi * 2.0 * delta;
		mat2 rot = mat2(vec2(cos(ang), -sin(ang)), vec2(sin(ang), cos(ang)));
		displacement.xy -= diff.xy;
		displacement.xy += rot * diff.xy;
	}
	return (emission_transform * vec4(displacement / delta, 0.0)).xyz;
}

vec3 get_random_direction_from_spread(inout uint alt_seed, float spread_angle) {
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;
	float spread_rad = spread_angle * degree_to_rad;
	float angle1_rad = rand_from_seed_m1_p1(alt_seed) * spread_rad;
	angle1_rad += direction.x != 0.0 ? atan(direction.y, direction.x) : sign(direction.y) * (pi / 2.0);
	vec3 spread_direction = vec3(cos(angle1_rad), sin(angle1_rad), 0.0);
	return spread_direction;
}

vec3 process_radial_displacement(DynamicsParameters param, float lifetime, inout uint alt_seed, mat4 transform, mat4 emission_transform, float delta) {
	vec3 radial_displacement = vec3(0.0);
	if (delta < 0.001) {
		return radial_displacement;
	}
	float radial_displacement_multiplier = 1.0;
	vec3 global_pivot = (emission_transform * vec4(velocity_pivot, 1.0)).xyz;
	if (length(transform[3].xyz - global_pivot) > 0.01) {
		radial_displacement = normalize(transform[3].xyz - global_pivot) * radial_displacement_multiplier * param.radial_velocity;
	} else {
		radial_displacement = get_random_direction_from_spread(alt_seed, 360.0) * param.radial_velocity;
	}
	if (radial_displacement_multiplier * param.radial_velocity < 0.0) {
		// Prevent inwards velocity to flicker once the point is reached.
		radial_displacement = normalize(radial_displacement) * min(abs(radial_displacement_multiplier * param.radial_velocity), length(transform[3].xyz - global_pivot) / delta);
	}
	return radial_displacement;
}

void process_physical_parameters(inout PhysicalParameters params, float lifetime_percent) {
}

void start() {
	uint base_number = NUMBER;
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DisplayParameters params;
	calculate_initial_display_params(params, alt_seed);
	// Reset alt seed?
	//alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DynamicsParameters dynamic_params;
	calculate_initial_dynamics_params(dynamic_params, alt_seed);
	PhysicalParameters physics_params;
	calculate_initial_physical_params(physics_params, alt_seed);
	process_display_param(params, 0.0);
	if (rand_from_seed(alt_seed) > AMOUNT_RATIO) {
		ACTIVE = false;
	}

	if (RESTART_CUSTOM) {
		CUSTOM = vec4(0.0);
		CUSTOM.w = params.lifetime;
		CUSTOM.x = dynamic_params.angle;
	}
	if (RESTART_COLOR) {
		COLOR = params.color;
	}
	if (RESTART_ROT_SCALE) {
		TRANSFORM[0].xyz = vec3(1.0, 0.0, 0.0);
		TRANSFORM[1].xyz = vec3(0.0, 1.0, 0.0);
		TRANSFORM[2].xyz = vec3(0.0, 0.0, 1.0);
	}
	if (RESTART_POSITION) {
		TRANSFORM[3].xyz = calculate_initial_position(params, alt_seed);
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
	}
	if (RESTART_VELOCITY) {
		VELOCITY = get_random_direction_from_spread(alt_seed, spread) * dynamic_params.initial_velocity_multiplier;
	}

	process_display_param(params, 0.0);

	VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
	VELOCITY += EMITTER_VELOCITY * inherit_emitter_velocity_ratio;
	VELOCITY.z = 0.0;
	TRANSFORM[3].z = 0.0;
}

void process() {
	uint base_number = NUMBER;
	//if (repeatable) {
	//	base_number = INDEX;
	//}
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DisplayParameters params;
	calculate_initial_display_params(params, alt_seed);
	DynamicsParameters dynamic_params;
	calculate_initial_dynamics_params(dynamic_params, alt_seed);
	PhysicalParameters physics_params;
	calculate_initial_physical_params(physics_params, alt_seed);

	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;

	CUSTOM.y += DELTA / LIFETIME;
	CUSTOM.y = mix(CUSTOM.y, 1.0, INTERPOLATE_TO_END);
	float lifetime_percent = CUSTOM.y / params.lifetime;
	if (CUSTOM.y > CUSTOM.w) {
		ACTIVE = false;
	}

	// Calculate all velocity.
	vec3 controlled_displacement = vec3(0.0);
	controlled_displacement += process_orbit_displacement(dynamic_params, lifetime_percent, alt_seed, TRANSFORM, EMISSION_TRANSFORM, DELTA, params.lifetime * LIFETIME);
	controlled_displacement += process_radial_displacement(dynamic_params, lifetime_percent, alt_seed, TRANSFORM, EMISSION_TRANSFORM, DELTA);

	process_physical_parameters(physics_params, lifetime_percent);
	vec3 force;
	{
		// Copied from previous version.
		vec3 pos = TRANSFORM[3].xyz;
		force = gravity;
		// Apply linear acceleration.
		force += length(VELOCITY) > 0.0 ? normalize(VELOCITY) * physics_params.linear_accel : vec3(0.0);
		// Apply radial acceleration.
		vec3 org = EMISSION_TRANSFORM[3].xyz;
		vec3 diff = pos - org;
		force += length(diff) > 0.0 ? normalize(diff) * physics_params.radial_accel : vec3(0.0);
		// Apply tangential acceleration.
		float tangent_accel_val = physics_params.tangent_accel;
		force += length(diff.yx) > 0.0 ? vec3(normalize(diff.yx * vec2(-1.0, 1.0)), 0.0) * tangent_accel_val : vec3(0.0);
		force += ATTRACTOR_FORCE;
		force.z = 0.0;
		// Apply attractor forces.
		VELOCITY += force * DELTA;
	}
	{
		// Copied from previous version.
		if (physics_params.damping > 0.0) {
			float v = length(VELOCITY);
			v -= physics_params.damping * DELTA;
			if (v < 0.0) {
				VELOCITY = vec3(0.0);
			} else {
				VELOCITY = normalize(VELOCITY) * v;
			}
		}
	}

	if (COLLIDED) {
		float collision_response = dot(COLLISION_NORMAL, VELOCITY);
		float slide_to_bounce_trigger = step(2.0 / clamp(collision_bounce + 1.0, 1.0, 2.0), abs(collision_response));
		TRANSFORM[3].xyz += COLLISION_NORMAL * COLLISION_DEPTH;
		// Remove all components of VELOCITY that are not tangential to COLLISION_NORMAL.
		VELOCITY -= COLLISION_NORMAL * collision_response;
		// Apply friction only to VELOCITY across the surface (effectively decouples friction and bounce behavior).
		VELOCITY = mix(VELOCITY, vec3(0.0), clamp(collision_friction, 0.0, 1.0));
		// Add bounce velocity to VELOCITY.
		VELOCITY -= COLLISION_NORMAL * collision_response * (collision_bounce * slide_to_bounce_trigger);
	}

	// Turbulence before limiting.
	vec3 final_velocity = controlled_displacement + VELOCITY;

	final_velocity.z = 0.0;

	TRANSFORM[3].xyz += final_velocity * DELTA;

	process_display_param(params, lifetime_percent);

	float base_angle = dynamic_params.angle;
	base_angle += CUSTOM.y * LIFETIME * dynamic_params.angular_velocity;
	CUSTOM.x = base_angle * degree_to_rad;
	COLOR = params.color;

	TRANSFORM[0] = vec4(cos(CUSTOM.x), -sin(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[1] = vec4(sin(CUSTOM.x), cos(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[2] = vec4(0.0, 0.0, 1.0, 0.0);
	TRANSFORM[3].z = 0.0;

	float scale_sign_x = params.scale.x < 0.0 ? -1.0 : 1.0;
	float scale_sign_y = params.scale.y < 0.0 ? -1.0 : 1.0;
	float scale_sign_z = params.scale.z < 0.0 ? -1.0 : 1.0;
	float scale_minimum = 0.001;
	TRANSFORM[0].xyz *= scale_sign_x * max(abs(params.scale.x), scale_minimum);
	TRANSFORM[1].xyz *= scale_sign_y * max(abs(params.scale.y), scale_minimum);
	TRANSFORM[2].xyz *= scale_sign_z * max(abs(params.scale.z), scale_minimum);

	CUSTOM.z = params.animation_offset + lifetime_percent * params.animation_speed;

	if (CUSTOM.y > CUSTOM.w) {
		ACTIVE = false;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_a75m5"]
shader = SubResource("Shader_mi270")
shader_parameter/direction = Vector3(1, 0, 0)
shader_parameter/spread = 45.0
shader_parameter/flatness = 0.0
shader_parameter/inherit_emitter_velocity_ratio = 0.0
shader_parameter/initial_linear_velocity_min = 0.0
shader_parameter/initial_linear_velocity_max = 0.0
shader_parameter/directional_velocity_min = 1.0
shader_parameter/directional_velocity_max = 1.0
shader_parameter/angular_velocity_min = 0.0
shader_parameter/angular_velocity_max = 0.0
shader_parameter/orbit_velocity_min = 0.0
shader_parameter/orbit_velocity_max = 0.0
shader_parameter/radial_velocity_min = 0.0
shader_parameter/radial_velocity_max = 0.0
shader_parameter/linear_accel_min = 0.0
shader_parameter/linear_accel_max = 0.0
shader_parameter/radial_accel_min = 0.0
shader_parameter/radial_accel_max = 0.0
shader_parameter/tangent_accel_min = 0.0
shader_parameter/tangent_accel_max = 0.0
shader_parameter/damping_min = 0.0
shader_parameter/damping_max = 0.0
shader_parameter/initial_angle_min = 0.0
shader_parameter/initial_angle_max = 0.0
shader_parameter/scale_min = 20.0
shader_parameter/scale_max = 20.0
shader_parameter/hue_variation_min = 0.0
shader_parameter/hue_variation_max = 0.0
shader_parameter/anim_speed_min = 0.0
shader_parameter/anim_speed_max = 0.0
shader_parameter/anim_offset_min = 0.0
shader_parameter/anim_offset_max = 0.0
shader_parameter/lifetime_randomness = 0.0
shader_parameter/emission_shape_offset = Vector3(0, 0, 0)
shader_parameter/emission_shape_scale = Vector3(1, 1, 1)
shader_parameter/velocity_pivot = Vector3(0, 0, 0)
shader_parameter/color_value = Color(1, 1, 1, 1)
shader_parameter/gravity = Vector3(0, 98, 0)
shader_parameter/collision_friction = 0.34
shader_parameter/collision_bounce = 0.2

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_gj0v0"]
radius = 8.0
height = 26.0

[sub_resource type="CircleShape2D" id="CircleShape2D_a75m5"]
radius = 20.024984

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_g46wl"]

[sub_resource type="Theme" id="Theme_a75m5"]

[sub_resource type="Theme" id="Theme_hf3yf"]
TextPink/base_type = &"RichTextLabel"
TextPink/colors/default_color = Color(0.9187019, 0.51058686, 0.87564236, 1)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_8v45c"]
texture = ExtResource("10_u14es")
4:0/0 = 0
6:0/0 = 0
4:2/0 = 0
6:2/0 = 0
0:3/0 = 0
2:3/0 = 0
4:4/0 = 0
5:4/0 = 0
6:4/0 = 0
2:5/0 = 0
3:5/0 = 0
4:5/0 = 0
5:5/0 = 0
6:5/0 = 0
4:6/0 = 0
5:6/0 = 0
6:6/0 = 0

[sub_resource type="TileSet" id="TileSet_wi8ca"]
sources/0 = SubResource("TileSetAtlasSource_8v45c")

[node name="GameTablemenu" type="Node2D"]
script = ExtResource("1_mi270")
metadata/_edit_horizontal_guides_ = [127.0]

[node name="Nozzle" type="Button" parent="."]
offset_left = 660.00006
offset_top = 135.0
offset_right = 824.0
offset_bottom = 348.0

[node name="TileMap" type="TileMapLayer" parent="Nozzle"]
position = Vector2(4, 73.000015)
scale = Vector2(10, 10)
tile_map_data = PackedByteArray("AAAAAAAAAQAdABsAAAAAAP//AQAdABoAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Tablebg" type="Sprite2D" parent="."]
z_index = -3
position = Vector2(753, 496.5)
scale = Vector2(1, 1.0308642)
texture = ExtResource("3_xfssl")

[node name="ConeDispenser" type="Button" parent="."]
offset_left = 277.0
offset_top = 699.0
offset_right = 409.0
offset_bottom = 835.0

[node name="Sprite2D" type="Sprite2D" parent="ConeDispenser"]
position = Vector2(65, 60)
scale = Vector2(5, 5)
texture = ExtResource("5_khkxo")

[node name="Chocolate" type="Button" parent="."]
offset_left = 1102.0
offset_top = 214.0
offset_right = 1121.0
offset_bottom = 232.0
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Chocolate"]
position = Vector2(-15, 1.0000014)
tile_map_data = PackedByteArray("AAABAAAAAQAPABMAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Vanilla" type="Button" parent="."]
offset_left = 963.0
offset_top = 214.0
offset_right = 982.0
offset_bottom = 232.0
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Vanilla"]
position = Vector2(-15, 1.0000014)
tile_map_data = PackedByteArray("AAABAAAAAQARABMAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Cherry" type="Button" parent="."]
top_level = true
offset_left = 1237.0
offset_top = 739.0
offset_right = 1256.0
offset_bottom = 757.0
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Cherry"]
position = Vector2(-15, 1.0000014)
tile_map_data = PackedByteArray("AAABAAAAAQAVABUAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Sprinkles" type="Button" parent="."]
offset_left = 1099.0
offset_top = 734.0
offset_right = 1118.0
offset_bottom = 753.6667
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Sprinkles"]
position = Vector2(-15, 1.0000014)
tile_map_data = PackedByteArray("AAABAAAAAQAXABUAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Strawberry" type="Button" parent="."]
offset_left = 1244.0
offset_top = 216.00002
offset_right = 1263.0
offset_bottom = 234.00002
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Strawberry"]
position = Vector2(-14.666672, 1.1666675)
tile_map_data = PackedByteArray("AAABAAAAAQATABMAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="GPUParticles2D" type="GPUParticles2D" parent="."]
visible = false
position = Vector2(936.99994, 354.99997)
scale = Vector2(20, 20)
emitting = false
amount = 10
lifetime = 5.0
process_material = SubResource("ShaderMaterial_a75m5")

[node name="NozzleTimer" type="Timer" parent="."]
process_callback = 0
wait_time = 0.1
autostart = true

[node name="ConeSprite" type="Sprite2D" parent="."]
visible = false
position = Vector2(741.50006, 681.75)
scale = Vector2(10, 11.140623)
texture = ExtResource("5_khkxo")

[node name="TileMapLayer" type="TileMapLayer" parent="ConeSprite"]
visible = false
position = Vector2(-67.00049, -4.000122)
scale = Vector2(20, 20)
tile_map_data = PackedByteArray("AAAAAAAAAQAeABsAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="StaticBody2D" type="StaticBody2D" parent="ConeSprite"]
position = Vector2(-9.950005, -9.761574)
scale = Vector2(0.1, 0.089761585)
collision_layer = 3
collision_mask = 3

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="ConeSprite/StaticBody2D"]
polygon = PackedVector2Array(17, 16, 2, -76, 1, -139, 6, -173, 8, -59, 20, -7, 39, 15, 41, 37, 61, 34, 64, 53, 131, 54, 134, 36, 154, 36, 156, 16, 174, -4, 188, -70, 185, -170, 191, -144, 197, -82, 178, 16, 100, 277)

[node name="CreamRaw" type="RigidBody2D" parent="."]
visible = false
position = Vector2(933.9999, 332)
mass = 2.0
freeze = true
script = ExtResource("3_a75m5")

[node name="Sprite2D" type="Sprite2D" parent="CreamRaw"]
position = Vector2(0.17521425, 17.794083)
rotation = 1.5707964
scale = Vector2(0.81380033, 0.76999015)
texture = ExtResource("7_imbru")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CreamRaw"]
position = Vector2(0.00012207031, 18)
shape = SubResource("CapsuleShape2D_gj0v0")

[node name="CherryRaw" type="RigidBody2D" parent="."]
visible = false
position = Vector2(-1, 0)
freeze = true

[node name="TileMapLayer" type="TileMapLayer" parent="CherryRaw"]
position = Vector2(-5.000061, 1.0000019)
scale = Vector2(6, 6)
tile_map_data = PackedByteArray("AAAAAAAAAAAAAAAAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CherryRaw"]
position = Vector2(41, 52)
shape = SubResource("CircleShape2D_a75m5")

[node name="SprinklesRaw" type="RigidBody2D" parent="."]
visible = false
position = Vector2(-2, 0)
collision_layer = 2
collision_mask = 2
freeze = true

[node name="TileMapLayer" type="TileMapLayer" parent="SprinklesRaw"]
position = Vector2(-5.000061, 1.0000019)
scale = Vector2(6, 6)
tile_map_data = PackedByteArray("AAAAAAAAAQAXABUAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="CollisionShape2D" type="CollisionShape2D" parent="SprinklesRaw"]
position = Vector2(58, 68)
shape = SubResource("CircleShape2D_a75m5")

[node name="ClearEntities" type="Button" parent="."]
offset_left = 119.0
offset_top = 703.0
offset_right = 247.0
offset_bottom = 836.0
text = "Clear Entities
"

[node name="Control" type="Control" parent="."]
clip_contents = true
layout_mode = 3
anchors_preset = 0
offset_left = 1451.0
offset_top = 116.0
offset_right = 1874.0
offset_bottom = 735.0

[node name="ScrollContainer" type="ScrollContainer" parent="Control"]
layout_mode = 0
offset_left = 6.0
offset_top = 18.0
offset_right = 414.0
offset_bottom = 625.0

[node name="VBoxContainer" type="VBoxContainer" parent="Control/ScrollContainer"]
clip_children = 1
custom_minimum_size = Vector2(400, 600)
layout_mode = 2

[node name="Order" type="VBoxContainer" parent="Control/ScrollContainer/VBoxContainer"]
visible = false
layout_mode = 2
size_flags_vertical = 3
script = ExtResource("5_hf3yf")

[node name="OrderNumberPanel" type="PanelContainer" parent="Control/ScrollContainer/VBoxContainer/Order"]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxEmpty_g46wl")

[node name="OrderNumber" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/OrderNumberPanel"]
layout_mode = 2
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 30
text = "Order #1"
fit_content = true
horizontal_alignment = 1

[node name="Sprite2D" type="Sprite2D" parent="Control/ScrollContainer/VBoxContainer/Order/OrderNumberPanel"]
show_behind_parent = true
position = Vector2(197.49994, 23.5)
scale = Vector2(3.0703123, 3.1875)
texture = ExtResource("9_gj0v0")

[node name="HBoxContainer" type="HBoxContainer" parent="Control/ScrollContainer/VBoxContainer/Order"]
visible = false
layout_mode = 2

[node name="Padding3" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_direction = 2
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
fit_content = true
horizontal_alignment = 2

[node name="Padding4" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_direction = 2
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
fit_content = true
horizontal_alignment = 2

[node name="Padding5" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_direction = 2
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
fit_content = true
horizontal_alignment = 2

[node name="Padding6" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_direction = 2
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
fit_content = true
horizontal_alignment = 2

[node name="Padding2" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_direction = 2
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
fit_content = true
horizontal_alignment = 2

[node name="CheckBox" type="CheckBox" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2

[node name="Ingredient" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 25
text = "Vanilla"
fit_content = true

[node name="Amount" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 25
text = "20
"
fit_content = true
horizontal_alignment = 2

[node name="Padding" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
text = "
"
fit_content = true
horizontal_alignment = 2

[node name="Padding7" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
text = "
"
fit_content = true
horizontal_alignment = 2

[node name="Padding8" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
text = "
"
fit_content = true
horizontal_alignment = 2

[node name="Padding9" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
text = "
"
fit_content = true
horizontal_alignment = 2

[node name="Padding10" type="RichTextLabel" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 25
text = "
"
fit_content = true
horizontal_alignment = 2

[node name="Sprite2D" type="Sprite2D" parent="Control/ScrollContainer/VBoxContainer/Order/HBoxContainer"]
z_index = -1
position = Vector2(203.00003, 25.250004)
scale = Vector2(3.0000005, 3.2187505)
texture = ExtResource("10_ektat")

[node name="Button" type="Button" parent="Control/ScrollContainer/VBoxContainer/Order"]
layout_mode = 2
theme = SubResource("Theme_a75m5")
theme_override_font_sizes/font_size = 20
text = "Submit Order"

[node name="Sprite2D" type="Sprite2D" parent="Control/ScrollContainer/VBoxContainer/Order/Button"]
z_index = -1
position = Vector2(203, 32.5)
scale = Vector2(2.9921875, 4.6875)
texture = ExtResource("11_uu4ud")

[node name="Banana" type="Button" parent="."]
top_level = true
offset_left = 967.0
offset_top = 739.0
offset_right = 986.0
offset_bottom = 757.0
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Banana"]
position = Vector2(-15, 1.1666656)
tile_map_data = PackedByteArray("AAABAAAAAAAAAAQAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="Crisp" type="Button" parent="."]
top_level = true
offset_left = 967.0
offset_top = 620.0
offset_right = 986.0
offset_bottom = 638.0
scale = Vector2(6, 6)

[node name="TileMapLayer" type="TileMapLayer" parent="Crisp"]
position = Vector2(-15, 1.0000014)
tile_map_data = PackedByteArray("AAABAAAAAAABAAIAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="CrispRaw" type="RigidBody2D" parent="."]
visible = false
position = Vector2(-2, 0)
freeze = true

[node name="TileMapLayer" type="TileMapLayer" parent="CrispRaw"]
position = Vector2(-5.000061, 1.0000019)
scale = Vector2(6, 6)
tile_map_data = PackedByteArray("AAAAAAAAAAABAAIAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CrispRaw"]
position = Vector2(41, 52)
shape = SubResource("CircleShape2D_a75m5")

[node name="BananaRaw" type="RigidBody2D" parent="."]
visible = false
position = Vector2(-2, 0)
freeze = true

[node name="TileMapLayer" type="TileMapLayer" parent="BananaRaw"]
position = Vector2(-5.000061, 1.0000019)
scale = Vector2(6, 6)
tile_map_data = PackedByteArray("AAAAAAAAAAAAAAUAAAA=")
tile_set = SubResource("TileSet_twdh5")

[node name="CollisionShape2D" type="CollisionShape2D" parent="BananaRaw"]
position = Vector2(41, 52)
shape = SubResource("CircleShape2D_a75m5")

[node name="Return" type="Button" parent="."]
offset_left = 1468.0
offset_top = 752.0
offset_right = 1793.0
offset_bottom = 840.0
theme_override_font_sizes/font_size = 30
text = "Return to Overworld"

[node name="Control2" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_left = 104.0
offset_top = 116.0
offset_right = 144.0
offset_bottom = 156.0

[node name="PanelContainer" type="PanelContainer" parent="Control2"]
layout_mode = 0
offset_left = 72.0
offset_top = -23.0
offset_right = 318.0
offset_bottom = 34.0

[node name="RichTextLabel" type="RichTextLabel" parent="Control2/PanelContainer"]
layout_mode = 2
theme_override_font_sizes/normal_font_size = 40
text = "INVENTORY"
horizontal_alignment = 1

[node name="InventoryContainer" type="VBoxContainer" parent="Control2"]
custom_minimum_size = Vector2(20, 0)
layout_mode = 0
offset_left = 15.0
offset_top = 37.0
offset_right = 384.0
offset_bottom = 79.0

[node name="IngredientContainer" type="PanelContainer" parent="Control2/InventoryContainer"]
visible = false
z_index = 1
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Control2/InventoryContainer/IngredientContainer"]
z_index = 2
clip_contents = true
layout_mode = 2

[node name="Ingredient" type="RichTextLabel" parent="Control2/InventoryContainer/IngredientContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 30
text = "Ingredient"
fit_content = true

[node name="Amount" type="RichTextLabel" parent="Control2/InventoryContainer/IngredientContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 30
text = "0/0
"
fit_content = true
horizontal_alignment = 2

[node name="Sprite2D" type="Sprite2D" parent="Control2/InventoryContainer/IngredientContainer"]
position = Vector2(188, 21.000008)
scale = Vector2(3.2187502, 1.5624999)
texture = ExtResource("9_8v45c")

[node name="Control3" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="CurrentFlavor" type="Panel" parent="Control3"]
layout_mode = 0
offset_left = 977.0
offset_top = 131.0
offset_right = 1367.0
offset_bottom = 195.0

[node name="RichTextLabel" type="RichTextLabel" parent="Control3/CurrentFlavor"]
layout_mode = 0
offset_left = 7.0
offset_top = 16.0
offset_right = 189.0
offset_bottom = 54.0
theme_override_font_sizes/normal_font_size = 25
text = "Current Flavor:
"
fit_content = true

[node name="Flavor" type="RichTextLabel" parent="Control3/CurrentFlavor"]
layout_mode = 0
offset_left = 199.0
offset_top = 17.0
offset_right = 346.0
offset_bottom = 55.0
theme = SubResource("Theme_hf3yf")
theme_override_font_sizes/normal_font_size = 25
text = "Vanilla"
fit_content = true

[node name="Popups" parent="." instance=ExtResource("9_imbru")]
offset_left = 437.0
offset_top = 410.0
offset_right = 437.0
offset_bottom = 410.0

[node name="Sprite2D" type="Sprite2D" parent="."]
z_index = -50
scale = Vector2(20, 20)

[node name="TileMapLayer" type="TileMapLayer" parent="Sprite2D"]
tile_map_data = PackedByteArray("AAAAAAEAAAAAAAMAAAABAAEAAAAAAAMAAAACAAIAAAAAAAMAAAACAAEAAAAFAAUAAAACAAAAAAAAAAMAAAABAAAAAAAAAAMAAAAAAAIAAAAAAAMAAAABAAIAAAAAAAMAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAMAAAAFAAAAAAAAAAMAAAAFAAEAAAAAAAMAAAAFAAIAAAAAAAMAAAAEAAIAAAAAAAMAAAAEAAEAAAAAAAMAAAADAAEAAAAAAAMAAAADAAIAAAAAAAMAAAAAAAAAAAAAAAMAAAA=")
tile_set = SubResource("TileSet_wi8ca")

[connection signal="button_down" from="Nozzle" to="." method="_on_nozzle_button_down"]
[connection signal="button_up" from="Nozzle" to="." method="_on_nozzle_button_up"]
[connection signal="button_down" from="ConeDispenser" to="." method="_on_cone_button_down"]
[connection signal="pressed" from="Chocolate" to="." method="_on_chocolate_pressed"]
[connection signal="pressed" from="Vanilla" to="." method="_on_vanilla_pressed"]
[connection signal="button_down" from="Cherry" to="." method="_on_cherry_button_down"]
[connection signal="button_up" from="Cherry" to="." method="_on_cherry_button_up"]
[connection signal="button_down" from="Sprinkles" to="." method="_on_sprinkles_button_down"]
[connection signal="pressed" from="Strawberry" to="." method="_on_strawberry_pressed"]
[connection signal="timeout" from="NozzleTimer" to="." method="_on_timer_timeout"]
[connection signal="pressed" from="ClearEntities" to="." method="_on_clear_entities_pressed"]
[connection signal="orderfufilled" from="Control/ScrollContainer/VBoxContainer/Order" to="." method="_on_order_orderfufilled"]
[connection signal="pressed" from="Control/ScrollContainer/VBoxContainer/Order/Button" to="Control/ScrollContainer/VBoxContainer/Order" method="_on_button_pressed"]
[connection signal="button_down" from="Banana" to="." method="_on_banana_button_down"]
[connection signal="button_down" from="Crisp" to="." method="_on_crisp_button_down"]
[connection signal="pressed" from="Return" to="." method="_on_return_pressed"]
